---
import { parse } from "node-html-parser";

export interface Props {
    name: string;
    isInline: false,
}

function getSVG(name: string) {
    const filepath = `/src/icons/${name}.svg`;
    const files = import.meta.glob<string>("/src/icons/**/*.svg", {
        as: "raw",
        eager: true
    });

    if (!(filepath in files)) {
        throw new Error(`${filepath} not found`);
    }

    const root = parse(files[filepath]);

    const svg = root.querySelector("svg");
    const { attributes, innerHTML } = svg;

    return {
        attributes,
        innerHTML,
    };
}

const { name, isInline, ...attributes } = Astro.props as Props;
const { attributes: baseAttributes, innerHTML } = getSVG(name);

const svgAttributes = { ...baseAttributes, ...attributes };
if (svgAttributes.class) {

    svgAttributes.class += " icon"
} else {
    svgAttributes.class = "icon"
}
---

{   
    isInline ? 
        <svg {...svgAttributes} set:html={innerHTML} /> 
        : 
        <svg {...svgAttributes}>
            <use href={`#${name}`}></use>
        </svg> 
}

