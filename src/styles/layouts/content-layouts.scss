.content {
  --accordion-margin: var(--s-5);
  --block-margin: var(--s-10);

  h2 {
    @include text-h2;

    @include md-tablet {
      @include mobile-text-h2;
    }
  }

  h3 {
    @include text-h3;

    @include md-tablet {
      @include mobile-text-h3;
    }
  }

  h4 {
  }

  h5 {
  }

  h6 {
  }

  a {
    color: var(--clr-text-accent);
    text-decoration: underline;
  }

  p {
    margin-top: var(--s-1);
  }

  *:is(h2, h3, h4, h5, h6, blockquote, table) + :is(p, ul, frame) {
    margin-top: var(--s-3);
  }

  :is(h2, h3, h4, h5, h6, blockquote, table) + :is(h2, h3, h4, h5, h6, blockquote, table) {
    margin-top: var(--s-3);
  }

  :is(p, ul, frame) + :is(h2, h3, h4, h5, h6, blockquote, table) {
    margin-top: var(--s-4);
  }

  img {
    width: 100%;
    max-width: 100%;
    height: rem(700);
    margin-top: var(--block-margin);

    object-fit: cover;

    & + * {
      margin-top: var(--block-margin);
    }

    @media (max-width: $bp-tablet) {
      height: rem(454);
    }
  }

  .accordion:not(.accordion + .accordion) {
    margin-top: var(--accordion-margin);
  }

  .accordion + :not(.accordion) {
    margin-top: var(--accordion-margin);
  }

  .tabs:not(.tabs + .tabs) {
    margin-top: var(--accordion-margin);
  }

  .tabs + :not(.tabs) {
    margin-top: var(--accordion-margin);
  }
}

.content-grid {
  --padding-inline: var(--container-padding);
  --content-max-width: var(--max-container-width);
  --breakout-max-width: 1200px;
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns:
    [full-width-start]
    minmax(var(--padding-inline), 1fr)
    [breakout-start]
    minmax(0, var(--breakout-size))
    [content-start]
    min(100% - (var(--padding-inline) * 2), var(--content-max-width))
    [content-end]
    minmax(0, var(--breakout-size))
    [breakout-end]
    minmax(var(--padding-inline), 1fr)
    [full-width-end];

  & > .full-width {
    display: grid;
    grid-column: full-width;
    grid-template-columns: inherit;

    & > :not(.breakout, .full-width) {
      grid-column: content;
    }
  }

  & > .breakout {
    grid-column: breakout;
  }

  & > :not(.breakout, .full-width) {
    grid-column: content;
  }
}
